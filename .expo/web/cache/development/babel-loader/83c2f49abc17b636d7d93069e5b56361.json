{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { getWeekDay, getDaysInMonth, getToday } from \"../utils/dateFormat\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_WIDTH = _Dimensions$get.width,\n    SCREEN_HEIGHT = _Dimensions$get.height;\n\nexport { SCREEN_WIDTH, SCREEN_HEIGHT };\nexport var DEFAULT_MIN_DATE = '2000-1-1';\nexport var DEFAULT_MAX_DATE = getToday();\nexport var DEFAULT_CANCEL_TEXT = 'Cancel';\nexport var DEFAULT_CONFIRM_TEXT = 'Confirm';\nexport var DEFAULT_TOOL_BAR_POSITION = {\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\nexport var DEFAULT_WEEK_ZH = ['日', '一', '二', '三', '四', '五', '六'];\nexport var DEFAULT_WEEK_EN = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\nexport var DEFAULT_MONTH_SHORT = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nexport var DEFAULT_MONTH_LONG = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport var DEFAULT_DATE_MARK_TYPE = {\n  ELLIPSE: 'ellipse',\n  SEMIELLIPSE: 'semiellipse',\n  RECTANGLE: 'rectangle',\n  SQUARE: 'square',\n  CIRCLE: 'circle',\n  DOT: 'dot'\n};\nexport function validateDate(date) {\n  if (!date) {\n    var errorMsg = 'minDate or maxDate are used but no value set';\n    __DEV__ && console.error(errorMsg);\n    return getToday();\n  }\n\n  if (date instanceof Date) return date.toISOString().slice(0, 10);\n  return date.replace(/\\//g, '-');\n}\nexport function getWeekDays(weeks, firstDay) {\n  var _weeks = [];\n\n  if (weeks === DEFAULT_WEEK_EN || weeks === DEFAULT_WEEK_ZH) {\n    var temWeeks = weeks === DEFAULT_WEEK_EN ? DEFAULT_WEEK_EN : DEFAULT_WEEK_ZH;\n\n    if (firstDay === 0) {\n      return temWeeks;\n    }\n\n    var _pre = [];\n    var _later = [];\n    temWeeks.forEach(function (day, index) {\n      if (index < firstDay) {\n        _later.push(day);\n      } else {\n        _pre.push(day);\n      }\n    });\n    _weeks = _pre.concat(_later);\n  } else {\n    _weeks = weeks;\n  }\n\n  return _weeks;\n}\nexport function getCalendarDates(startDate, endDate, firstDay) {\n  var startArr = startDate.replace(/\\//g, '-').split('-');\n  var endArr = endDate.replace(/\\//g, '-').split('-');\n  var startYear = +startArr[0];\n  var endYear = +endArr[0];\n  var startMonth = +startArr[1];\n  var endMonth = +endArr[1];\n  var dates = [];\n\n  for (var year = startYear; year <= endYear; year++) {\n    if (startYear === endYear) {\n      dates = dates.concat(constructCalendarDates(year, startMonth, endMonth, firstDay));\n    } else if (year === startYear) {\n      dates = dates.concat(constructCalendarDates(year, startMonth, 12, firstDay));\n    } else if (year === endYear) {\n      dates = dates.concat(constructCalendarDates(year, 1, endMonth, firstDay));\n    } else {\n      dates = dates.concat(constructCalendarDates(year, 1, 12, firstDay));\n    }\n  }\n\n  return dates;\n}\n\nfunction constructCalendarDates(year, startMonth, endMonth, firstDay) {\n  var dates = [];\n\n  for (var month = startMonth; month <= endMonth; month++) {\n    var obj = {\n      year: year\n    };\n    obj.month = month;\n    var days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27];\n    var weekDay = -1;\n    var maxDayInMonth = -1;\n    weekDay = getWeekDay(year + \"-\" + (month <= 9 ? '0' : '') + month + \"-01\") - firstDay;\n\n    if (weekDay < 0) {\n      weekDay = weekDay + 7;\n    }\n\n    maxDayInMonth = getDaysInMonth(year, month);\n\n    for (var wd = 0; wd < weekDay; wd++) {\n      days.unshift(-(wd + 1));\n    }\n\n    for (var day = 28; day <= maxDayInMonth; day++) {\n      days.push(day);\n    }\n\n    obj.days = days;\n    dates.push(obj);\n  }\n\n  return dates;\n}\n\nexport var DATE_PICKER_ROWS = 5;\nexport var DATE_PICKER_ROW_HEIGHT = 35;\nexport var BORDER_LINE_POSITION = {\n  TOP: 'top',\n  MIDDLE: 'middle',\n  BOTTOM: 'bottom'\n};\nexport var DATE_TYPE = {\n  YYYY_MM_DD: 'YYYY-MM-DD',\n  MM_DD_YYYY: 'MM-DD-YYYY',\n  DD_MM_YYYY: 'DD-MM-YYYY',\n  YYYY_MM: 'YYYY-MM',\n  MM_YYYY: 'MM-YYYY',\n  MM_DD: 'MM-DD',\n  DD_MM: 'DD-MM',\n  YYYY: 'YYYY',\n  MM: 'MM',\n  DD: 'DD'\n};\nexport var DATE_KEY_TYPE = {\n  YEAR: 'year',\n  MONTH: 'month',\n  DAY: 'day'\n};\nexport var MONTH_DISPLAY_MODE = {\n  DIGIT: 'digit',\n  EN_SHORT: 'en-short',\n  EN_LONG: 'en-long'\n};\nexport function selectDatePickerData(index, data) {\n  return index >= 0 && data.length > index ? data[index].data : [];\n}\nexport function datePickerListWidth(type, width) {\n  if (!type || typeof type !== 'string' || +width > SCREEN_WIDTH) {\n    return SCREEN_WIDTH / type.split('-').length;\n  }\n\n  return +width / type.split('-').length;\n}\nexport function getDatePickerData(type, years, months, days) {\n  var _year = {\n    key: DATE_KEY_TYPE.YEAR,\n    data: years\n  };\n  var _month = {\n    key: DATE_KEY_TYPE.MONTH,\n    data: months\n  };\n  var _day = {\n    key: DATE_KEY_TYPE.DAY,\n    data: days\n  };\n\n  switch (type) {\n    case DATE_TYPE.YYYY_MM_DD:\n      return [_year, _month, _day];\n\n    case DATE_TYPE.MM_DD_YYYY:\n      return [_month, _day, _year];\n\n    case DATE_TYPE.DD_MM_YYYY:\n      return [_day, _month, _year];\n\n    case DATE_TYPE.YYYY_MM:\n      return [_year, _month];\n\n    case DATE_TYPE.MM_YYYY:\n      return [_month, _year];\n\n    case DATE_TYPE.MM_DD:\n      return [_month, _day];\n\n    case DATE_TYPE.DD_MM:\n      return [_day, _month];\n\n    case DATE_TYPE.YYYY:\n      return [_year];\n\n    case DATE_TYPE.MM:\n      return [_month];\n\n    case DATE_TYPE.DD:\n      return [_day];\n\n    default:\n      return [_year, _month, _day];\n  }\n}\nexport function getDatePickerInitialData(initialProps) {\n  var type = initialProps.type,\n      defaultDate = initialProps.defaultDate,\n      minDate = initialProps.minDate,\n      maxDate = initialProps.maxDate,\n      monthDisplayMode = initialProps.monthDisplayMode;\n\n  var _verifyDate = function _verifyDate(date) {\n    var aDate = date;\n    if (!date) aDate = getToday();\n    if (date instanceof Date) aDate = date.toISOString().slice(0, 10);\n    aDate = aDate.replace(/\\//g, '-');\n    var _y = '2000',\n        _m = '1',\n        _d = '1';\n\n    var _printError = function _printError() {\n      return console.warn(\"The date type you selected is: \" + type + \", but has incorrect date format: \" + aDate);\n    };\n\n    switch (type) {\n      case DATE_TYPE.YYYY:\n        __DEV__ && aDate.length !== 4 && _printError();\n        return aDate + \"-\" + _m + \"-\" + _d;\n\n      case DATE_TYPE.MM:\n        __DEV__ && (aDate.length > 2 || +aDate < 1 || +aDate > 12) && _printError();\n        return _y + \"-\" + aDate + \"-\" + _d;\n\n      case DATE_TYPE.DD:\n        __DEV__ && (aDate.length > 2 || +aDate < 1 || +aDate > 31) && _printError();\n        return _y + \"-\" + _m + \"-\" + aDate;\n\n      case DATE_TYPE.YYYY_MM:\n      case DATE_TYPE.MM_YYYY:\n        __DEV__ && (aDate.length > 7 || aDate.length < 6) && _printError();\n        return aDate + \"-\" + _d;\n\n      case DATE_TYPE.MM_DD:\n      case DATE_TYPE.DD_MM:\n        __DEV__ && (aDate.length < 3 || aDate.length > 5) && _printError();\n        return _y + \"-\" + aDate;\n\n      default:\n        return aDate;\n    }\n  };\n\n  var _maxDate = _verifyDate(maxDate);\n\n  var _defaultDate = _verifyDate(defaultDate || maxDate);\n\n  var _minDate = _verifyDate(minDate);\n\n  assertDate(_maxDate, _minDate, _defaultDate);\n\n  var _defaultDates = _defaultDate.split('-');\n\n  var initialSelectedDate = getDatePickerInitSelectDate(type, _defaultDates);\n\n  var legalIndex = function legalIndex(index, data) {\n    return index < 0 ? data.length - 1 : index;\n  };\n\n  var dates = constructDatePickerDates(monthDisplayMode, _minDate, _maxDate);\n  var yearIndex = dates.findIndex(function (item) {\n    return item.date === +_defaultDates[0];\n  });\n  var defaultYearIndex = legalIndex(yearIndex, dates);\n  var months = selectDatePickerData(defaultYearIndex, dates);\n  var monthIndex = months.findIndex(function (item) {\n    return item.date === getDatePickerMonth(monthDisplayMode, +_defaultDates[1]);\n  });\n  var defaultMonthIndex = legalIndex(monthIndex, months);\n  var days = selectDatePickerData(defaultMonthIndex, months);\n  var dayIndex = days.findIndex(function (item) {\n    return item.date === +_defaultDates[2];\n  });\n  var defaultDayIndex = legalIndex(dayIndex, days);\n  return _objectSpread({\n    years: dates,\n    months: months,\n    days: days,\n    defaultYearIndex: defaultYearIndex,\n    defaultMonthIndex: defaultMonthIndex,\n    defaultDayIndex: defaultDayIndex\n  }, initialSelectedDate);\n}\n\nfunction getDatePickerInitSelectDate(type, initialDefaultDates) {\n  var _year = initialDefaultDates[0];\n  var _month = initialDefaultDates[1];\n  var _day = initialDefaultDates[2];\n\n  switch (type) {\n    case DATE_TYPE.YYYY_MM_DD:\n    case DATE_TYPE.MM_DD_YYYY:\n    case DATE_TYPE.DD_MM_YYYY:\n      return {\n        selectedYear: _year,\n        selectedMonth: _month,\n        selectedDay: _day\n      };\n\n    case DATE_TYPE.YYYY_MM:\n    case DATE_TYPE.MM_YYYY:\n      return {\n        selectedYear: _year,\n        selectedMonth: _month,\n        selectedDay: ''\n      };\n\n    case DATE_TYPE.MM_DD:\n    case DATE_TYPE.DD_MM:\n      return {\n        selectedYear: '',\n        selectedMonth: _month,\n        selectedDay: _day\n      };\n\n    case DATE_TYPE.YYYY:\n      return {\n        selectedYear: _year,\n        selectedMonth: '',\n        selectedDay: ''\n      };\n\n    case DATE_TYPE.MM:\n      return {\n        selectedYear: '',\n        selectedMonth: _month,\n        selectedDay: ''\n      };\n\n    case DATE_TYPE.DD:\n      return {\n        selectedYear: '',\n        selectedMonth: '',\n        selectedDay: _day\n      };\n\n    default:\n      return {\n        selectedYear: _year,\n        selectedMonth: _month,\n        selectedDay: _day\n      };\n  }\n}\n\nfunction constructDatePickerDates(monthDisplayMode, startDate, endDate) {\n  var startArr = startDate.split('-');\n  var endArr = endDate.split('-');\n  var startYear = +startArr[0];\n  var endYear = +endArr[0];\n  var startMonth = +startArr[1];\n  var endMonth = +endArr[1];\n  var startDay = +startArr[2];\n  var endDay = +endArr[2];\n  var dates = [];\n\n  for (var year = startYear; year <= endYear; year++) {\n    var yearObj = {\n      date: year\n    };\n    var _startMonth = startMonth;\n    var _endMonth = endMonth;\n\n    if (startYear === endYear) {} else if (year === startYear) {\n      _endMonth = 12;\n    } else if (year === endYear) {\n      _startMonth = 1;\n    } else {\n      _startMonth = 1;\n      _endMonth = 12;\n    }\n\n    var months = [];\n\n    for (var month = _startMonth; month <= _endMonth; month++) {\n      var monthObj = {\n        date: getDatePickerMonth(monthDisplayMode, month)\n      };\n      var maxDay = getDaysInMonth(year, month);\n      var _startDay = startDay;\n      var _endDay = endDay;\n\n      if (year > startYear && year < endYear) {\n        _startDay = 1;\n        _endDay = maxDay;\n      } else {\n        if (_startMonth === _endMonth) {\n          _startDay = startYear === endYear || year === startYear ? startDay : 1;\n          _endDay = startYear === endYear || year === endYear ? endDay : maxDay;\n        } else if (month === _startMonth) {\n          _startDay = startYear === endYear || year === startYear ? startDay : 1;\n          _endDay = maxDay;\n        } else if (month === _endMonth) {\n          _startDay = 1;\n          _endDay = startYear === endYear || year === endYear ? endDay : maxDay;\n        } else {\n          _startDay = 1;\n          _endDay = maxDay;\n        }\n      }\n\n      var days = [];\n\n      for (var day = _startDay; day <= _endDay; day++) {\n        var dayObj = {\n          date: day\n        };\n        days.push(dayObj);\n      }\n\n      monthObj.data = days;\n      months.push(monthObj);\n    }\n\n    yearObj.data = months;\n    dates.push(yearObj);\n  }\n\n  return dates;\n}\n\nfunction getDatePickerMonth(monthDisplayMode, month) {\n  if (Object.values(MONTH_DISPLAY_MODE).indexOf(monthDisplayMode) < 0) return month;\n\n  switch (monthDisplayMode) {\n    case MONTH_DISPLAY_MODE.DIGIT:\n      return month;\n\n    case MONTH_DISPLAY_MODE.EN_SHORT:\n      return DEFAULT_MONTH_SHORT[month - 1];\n\n    case MONTH_DISPLAY_MODE.EN_LONG:\n      return DEFAULT_MONTH_LONG[month - 1];\n\n    default:\n      return month;\n  }\n}\n\nfunction assertDate(maxDate, minDate, defaultDate) {\n  var errorMsg = '';\n\n  if (!greaterThanOrEqualTo(defaultDate, minDate)) {\n    errorMsg = \"Error! defaultDate must be greater than or equal to minDate! But defaultDate: \" + defaultDate + \" is less than minDate: \" + minDate;\n  }\n\n  if (!greaterThanOrEqualTo(maxDate, defaultDate)) {\n    errorMsg = \"Error! maxDate must be greater than or equal to defaultDate! But maxDate: \" + maxDate + \" is less than defaultDate: \" + defaultDate;\n  }\n\n  if (!greaterThanOrEqualTo(maxDate, minDate)) {\n    errorMsg = \"Error! maxDate must be greater than or equal to minDate! But maxDate: \" + maxDate + \" is less than minDate: \" + minDate;\n  }\n\n  __DEV__ && errorMsg && errorMsg.length && console.error(errorMsg);\n}\n\nexport function greaterThan(date, another) {\n  if (!date || typeof date !== 'string' || !another || typeof another !== 'string') return false;\n  var dateArr = date.replace(/\\//g, '-').split('-');\n  var anotherArr = another.replace(/\\//g, '-').split('-');\n  if (parseInt(dateArr[0]) > parseInt(anotherArr[0])) return true;\n\n  if (parseInt(dateArr[0]) === parseInt(anotherArr[0])) {\n    if (parseInt(dateArr[1]) > parseInt(anotherArr[1])) return true;\n    if (parseInt(dateArr[1]) === parseInt(anotherArr[1])) return parseInt(dateArr[2]) > parseInt(anotherArr[2]);\n  }\n\n  return false;\n}\nexport function greaterThanOrEqualTo(date, another) {\n  if (!date || typeof date !== 'string' || !another || typeof another !== 'string') return false;\n  if (date === another) return true;\n  var dateArr = date.replace(/\\//g, '-').split('-');\n  var anotherArr = another.replace(/\\//g, '-').split('-');\n  if (parseInt(dateArr[0]) > parseInt(anotherArr[0])) return true;\n\n  if (parseInt(dateArr[0]) === parseInt(anotherArr[0])) {\n    if (parseInt(dateArr[1]) > parseInt(anotherArr[1])) return true;\n    if (parseInt(dateArr[1]) === parseInt(anotherArr[1])) return parseInt(dateArr[2]) >= parseInt(anotherArr[2]);\n  }\n\n  return false;\n}\nexport function toStandardStringWith(date) {\n  var monthDisplayMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (!date || typeof date !== 'string') return date;\n  var dates = date.replace(/\\//g, '-').split('-');\n\n  if (dates.length !== 3) {\n    __DEV__ && console.warn('Sorry! date string format is incorrect!');\n    return date;\n  }\n\n  var year = dates[0];\n  var day = dates[2];\n  var month = dates[1];\n\n  if (monthDisplayMode === MONTH_DISPLAY_MODE.EN_SHORT) {\n    month = DEFAULT_MONTH_SHORT.indexOf(month) >= 0 ? (DEFAULT_MONTH_SHORT.indexOf(month) + 1).toString() : month;\n  }\n\n  if (monthDisplayMode === MONTH_DISPLAY_MODE.EN_LONG) {\n    month = DEFAULT_MONTH_LONG.indexOf(month) >= 0 ? (DEFAULT_MONTH_LONG.indexOf(month) + 1).toString() : month;\n  }\n\n  year = year.length ? year + (month.length ? '-' : '') : '';\n  var monthDash = day.length ? '-' : '';\n  month = month.length ? month.length === 1 ? \"0\" + month + monthDash : \"\" + month + monthDash : '';\n  day = day.length ? day.length === 1 ? \"0\" + day : \"\" + day : '';\n  return year + month + day;\n}","map":{"version":3,"sources":["E:/app/rn-starter/node_modules/react-native-common-date-picker/src/contants/index.js"],"names":["getWeekDay","getDaysInMonth","getToday","Dimensions","get","SCREEN_WIDTH","width","SCREEN_HEIGHT","height","DEFAULT_MIN_DATE","DEFAULT_MAX_DATE","DEFAULT_CANCEL_TEXT","DEFAULT_CONFIRM_TEXT","DEFAULT_TOOL_BAR_POSITION","TOP","BOTTOM","DEFAULT_WEEK_ZH","DEFAULT_WEEK_EN","DEFAULT_MONTH_SHORT","DEFAULT_MONTH_LONG","DEFAULT_DATE_MARK_TYPE","ELLIPSE","SEMIELLIPSE","RECTANGLE","SQUARE","CIRCLE","DOT","validateDate","date","errorMsg","__DEV__","console","error","Date","toISOString","slice","replace","getWeekDays","weeks","firstDay","_weeks","temWeeks","_pre","_later","forEach","day","index","push","concat","getCalendarDates","startDate","endDate","startArr","split","endArr","startYear","endYear","startMonth","endMonth","dates","year","constructCalendarDates","month","obj","days","weekDay","maxDayInMonth","wd","unshift","DATE_PICKER_ROWS","DATE_PICKER_ROW_HEIGHT","BORDER_LINE_POSITION","MIDDLE","DATE_TYPE","YYYY_MM_DD","MM_DD_YYYY","DD_MM_YYYY","YYYY_MM","MM_YYYY","MM_DD","DD_MM","YYYY","MM","DD","DATE_KEY_TYPE","YEAR","MONTH","DAY","MONTH_DISPLAY_MODE","DIGIT","EN_SHORT","EN_LONG","selectDatePickerData","data","length","datePickerListWidth","type","getDatePickerData","years","months","_year","key","_month","_day","getDatePickerInitialData","initialProps","defaultDate","minDate","maxDate","monthDisplayMode","_verifyDate","aDate","_y","_m","_d","_printError","warn","_maxDate","_defaultDate","_minDate","assertDate","_defaultDates","initialSelectedDate","getDatePickerInitSelectDate","legalIndex","constructDatePickerDates","yearIndex","findIndex","item","defaultYearIndex","monthIndex","getDatePickerMonth","defaultMonthIndex","dayIndex","defaultDayIndex","initialDefaultDates","selectedYear","selectedMonth","selectedDay","startDay","endDay","yearObj","_startMonth","_endMonth","monthObj","maxDay","_startDay","_endDay","dayObj","Object","values","indexOf","greaterThanOrEqualTo","greaterThan","another","dateArr","anotherArr","parseInt","toStandardStringWith","toString","monthDash"],"mappings":"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","sourcesContent":["import {Dimensions} from 'react-native';\nimport {getWeekDay, getDaysInMonth, getToday} from '../utils/dateFormat';\n\nexport const {width: SCREEN_WIDTH, height: SCREEN_HEIGHT} = Dimensions.get('window');\nexport const DEFAULT_MIN_DATE = '2000-1-1';\nexport const DEFAULT_MAX_DATE = getToday();\n\n/** Tool bar **/\nexport const DEFAULT_CANCEL_TEXT = 'Cancel';\nexport const DEFAULT_CONFIRM_TEXT = 'Confirm';\nexport const DEFAULT_TOOL_BAR_POSITION = {\n    TOP: 'top',\n    BOTTOM: 'bottom',\n};\n\n/** Only for Calendar */\nexport const DEFAULT_WEEK_ZH = ['日', '一', '二', '三', '四', '五', '六'];\n\n/** Only for Calendar */\nexport const DEFAULT_WEEK_EN = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n\nexport const DEFAULT_MONTH_SHORT = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport const DEFAULT_MONTH_LONG = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n/** Only for Calendar */\nexport const DEFAULT_DATE_MARK_TYPE = {\n    ELLIPSE: 'ellipse',\n    SEMIELLIPSE: 'semiellipse',\n    RECTANGLE: 'rectangle',\n    SQUARE: 'square',\n    CIRCLE: 'circle',\n    DOT: 'dot',\n};\n\n/**\n * Only for Calendar\n *\n * Validate date parameter\n * @param date A string type or Date type\n * @returns {string|void | string} Returns a string like \"2020-6-15\"\n */\nexport function validateDate(date: any): string {\n    if (!date) {\n        const errorMsg = 'minDate or maxDate are used but no value set';\n        __DEV__ && console.error(errorMsg);\n        return getToday();\n    }\n    if (date instanceof Date) return date.toISOString().slice(0, 10);\n    return date.replace(/\\//g, '-');\n}\n\n/**\n * Only for Calendar\n *\n * @param weeks\n * @param firstDay\n * @returns {[]} Returns a week array according to the first day.\n */\nexport function getWeekDays(weeks: [string], firstDay: number): [string] {\n    let _weeks = [];\n    // Use default week\n    if (weeks === DEFAULT_WEEK_EN || weeks === DEFAULT_WEEK_ZH) {\n        const temWeeks = weeks === DEFAULT_WEEK_EN ? DEFAULT_WEEK_EN : DEFAULT_WEEK_ZH;\n        // Nothing changed\n        if (firstDay === 0) {\n            return temWeeks;\n        }\n\n        const _pre = [];\n        const _later = [];\n        temWeeks.forEach((day, index) => {\n            if (index < firstDay) {\n                _later.push(day);\n            } else {\n                _pre.push(day);\n            }\n        });\n        _weeks = _pre.concat(_later);\n    } else {\n        _weeks = weeks;\n    }\n    return _weeks;\n}\n\n/**\n * Construct dates according to given two dates\n * @param startDate A string date like '2019-05-20'\n * @param endDate A string date like '2020-06-02'\n * @param firstDay\n * @returns {[]} Return a date array consists of year, month and day such as [{year: 2019, month: 1, days: [1, 2, 3, ...]}, {year: 2019, month: 2, days: [1, 2, 3, ...]}, {year: 2020, month: 6, days: [1, 2, 3, ...]}]\n */\nexport function getCalendarDates(startDate: string, endDate: string, firstDay: number) {\n    const startArr = startDate.replace(/\\//g, '-').split('-');\n    const endArr = endDate.replace(/\\//g, '-').split('-');\n    const startYear = +startArr[0];\n    const endYear = +endArr[0];\n    const startMonth = +startArr[1];\n    const endMonth = +endArr[1];\n    let dates = [];\n    for (let year = startYear; year <= endYear; year++) {\n        if (startYear === endYear) {\n            dates = dates.concat(constructCalendarDates(year, startMonth, endMonth, firstDay));\n        } else if (year === startYear) {\n            dates = dates.concat(constructCalendarDates(year, startMonth, 12, firstDay));\n        } else if (year === endYear) {\n            dates = dates.concat(constructCalendarDates(year, 1, endMonth, firstDay));\n        } else {\n            dates = dates.concat(constructCalendarDates(year, 1, 12, firstDay));\n        }\n    }\n    return dates;\n}\n\n/**\n * Returns a date array containing all dates via year, month and day\n * @param year A numeric value equal to the year\n * @param startMonth A numeric value equal to the month from 1 to 12\n * @param endMonth A numeric value equal to the month from 1 to 12\n * @param firstDay\n * @returns {[]}\n */\nfunction constructCalendarDates(year: number, startMonth: number, endMonth: number, firstDay: number) {\n    const dates = [];\n    for (let month = startMonth; month <= endMonth; month++) {\n        const obj = {year};\n        obj.month = month;\n\n        const days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27];\n        let weekDay = -1;\n        let maxDayInMonth = -1;\n\n        weekDay = getWeekDay(`${year}-${month <= 9 ? '0' : ''}${month}-01`) - firstDay;\n        if (weekDay < 0) {\n            weekDay = weekDay + 7;\n        }\n        maxDayInMonth = getDaysInMonth(year, month);\n\n        for (let wd = 0; wd < weekDay; wd++) {\n            days.unshift(-(wd + 1));\n        }\n\n        for (let day = 28; day <= maxDayInMonth; day++) {\n            days.push(day);\n        }\n\n        obj.days = days;\n        dates.push(obj);\n    }\n    return dates;\n}\n\n/** Only for Date Picker */\nexport const DATE_PICKER_ROWS = 5;\nexport const DATE_PICKER_ROW_HEIGHT = 35;\n\n/** Only for Date Picker */\nexport const BORDER_LINE_POSITION = {\n    TOP: 'top',\n    MIDDLE: 'middle',\n    BOTTOM: 'bottom',\n};\n\n/** Only for Date Picker */\nexport const DATE_TYPE = {\n    YYYY_MM_DD: 'YYYY-MM-DD',\n    MM_DD_YYYY: 'MM-DD-YYYY',\n    DD_MM_YYYY: 'DD-MM-YYYY',\n    YYYY_MM: 'YYYY-MM',\n    MM_YYYY: 'MM-YYYY',\n    MM_DD: 'MM-DD',\n    DD_MM: 'DD-MM',\n    YYYY: 'YYYY',\n    MM: 'MM',\n    DD: 'DD',\n};\n\n/** Only for Date Picker */\nexport const DATE_KEY_TYPE = {\n    YEAR: 'year',\n    MONTH: 'month',\n    DAY: 'day',\n};\n\n/** Only for Date Picker */\nexport const MONTH_DISPLAY_MODE = {\n    DIGIT: 'digit',\n    EN_SHORT: 'en-short',\n    EN_LONG: 'en-long',\n};\n\n/** Only for Date Picker */\nexport function selectDatePickerData(index, data) {\n    return index >= 0 && data.length > index ? data[index].data : [];\n}\n\n/** Only for Date Picker */\nexport function datePickerListWidth(type: string, width: number | string) {\n    if (!type || typeof type !== 'string' || +width > SCREEN_WIDTH) {\n        return SCREEN_WIDTH / type.split('-').length;\n    }\n    return +width / type.split('-').length;\n}\n\n/** Only for Date Picker */\nexport function getDatePickerData(type, years, months, days) {\n    const _year = {key: DATE_KEY_TYPE.YEAR, data: years};\n    const _month = {key: DATE_KEY_TYPE.MONTH, data: months};\n    const _day = {key: DATE_KEY_TYPE.DAY, data: days};\n    switch (type) {\n        case DATE_TYPE.YYYY_MM_DD:\n            return [_year, _month, _day];\n        case DATE_TYPE.MM_DD_YYYY:\n            return [_month, _day, _year];\n        case DATE_TYPE.DD_MM_YYYY:\n            return [_day, _month, _year];\n        case DATE_TYPE.YYYY_MM:\n            return [_year, _month];\n        case DATE_TYPE.MM_YYYY:\n            return [_month, _year];\n        case DATE_TYPE.MM_DD:\n            return [_month, _day];\n        case DATE_TYPE.DD_MM:\n            return [_day, _month];\n        case DATE_TYPE.YYYY:\n            return [_year];\n        case DATE_TYPE.MM:\n            return [_month];\n        case DATE_TYPE.DD:\n            return [_day];\n        default:\n            return [_year, _month, _day];\n    }\n}\n\n/** Only for Date Picker */\nexport function getDatePickerInitialData(initialProps) {\n\n    const {\n        type,\n        defaultDate,\n        minDate,\n        maxDate,\n        monthDisplayMode,\n    } = initialProps;\n\n    const _verifyDate = date => {\n        let aDate = date;\n        if (!date) aDate = getToday();\n        if (date instanceof Date) aDate = date.toISOString().slice(0, 10);\n        aDate = aDate.replace(/\\//g, '-'); // Replace \"/\" with \"-\".\n        const _y = '2000', _m = '1', _d = '1';\n        const _printError = () => console.warn(`The date type you selected is: ${type}, but has incorrect date format: ${aDate}`);\n        switch (type) {\n            case DATE_TYPE.YYYY:\n                __DEV__ && aDate.length !== 4 && _printError();\n                return `${aDate}-${_m}-${_d}`;\n            case DATE_TYPE.MM:\n                __DEV__ && (aDate.length > 2 || +aDate < 1 || +aDate > 12) && _printError();\n                return `${_y}-${aDate}-${_d}`;\n            case DATE_TYPE.DD:\n                __DEV__ && (aDate.length > 2 || +aDate < 1 || +aDate > 31) && _printError();\n                return `${_y}-${_m}-${aDate}`;\n            case DATE_TYPE.YYYY_MM:\n            case DATE_TYPE.MM_YYYY:\n                __DEV__ && (aDate.length > 7 || aDate.length < 6) && _printError();\n                return `${aDate}-${_d}`;\n            case DATE_TYPE.MM_DD:\n            case DATE_TYPE.DD_MM:\n                __DEV__ && (aDate.length < 3 || aDate.length > 5) && _printError();\n                return `${_y}-${aDate}`;\n            default:\n                return aDate;\n        }\n    };\n\n    const _maxDate = _verifyDate(maxDate);\n\n    // If defaultDate doest not exist, default is maxDate\n    const _defaultDate = _verifyDate(defaultDate || maxDate);\n\n    const _minDate = _verifyDate(minDate);\n\n    // maxDate must be greater or equal to defaultDate, then defaultDate must be greater or equal to minDate\n    assertDate(_maxDate, _minDate, _defaultDate);\n\n    // The default selected date for the first time\n    const _defaultDates = _defaultDate.split('-');\n    const initialSelectedDate = getDatePickerInitSelectDate(type, _defaultDates);\n\n    // Validate whether the index is legal\n    const legalIndex = (index, data) => index < 0 ? (data.length - 1) : index;\n\n    // Years\n    const dates = constructDatePickerDates(monthDisplayMode, _minDate, _maxDate);\n    const yearIndex = dates.findIndex(item => item.date === +_defaultDates[0]);\n    const defaultYearIndex = legalIndex(yearIndex, dates);\n\n    // Months\n    const months = selectDatePickerData(defaultYearIndex, dates);\n    const monthIndex = months.findIndex(item => item.date === getDatePickerMonth(monthDisplayMode, +_defaultDates[1]));\n    const defaultMonthIndex = legalIndex(monthIndex, months);\n\n    // Days\n    const days = selectDatePickerData(defaultMonthIndex, months);\n    const dayIndex = days.findIndex(item => item.date === +_defaultDates[2]);\n    const defaultDayIndex = legalIndex(dayIndex, days);\n\n    return {\n        years: dates,\n        months,\n        days,\n        defaultYearIndex,\n        defaultMonthIndex,\n        defaultDayIndex,\n        ...initialSelectedDate,\n    };\n}\n\n/** Only for Date Picker */\nfunction getDatePickerInitSelectDate(type: string, initialDefaultDates: Array) {\n\n    const _year = initialDefaultDates[0];\n    const _month = initialDefaultDates[1];\n    const _day = initialDefaultDates[2];\n\n    switch (type) {\n        case DATE_TYPE.YYYY_MM_DD:\n        case DATE_TYPE.MM_DD_YYYY:\n        case DATE_TYPE.DD_MM_YYYY:\n            return {selectedYear: _year, selectedMonth: _month, selectedDay: _day};\n        case DATE_TYPE.YYYY_MM:\n        case DATE_TYPE.MM_YYYY:\n            return {selectedYear: _year, selectedMonth: _month, selectedDay: ''};\n        case DATE_TYPE.MM_DD:\n        case DATE_TYPE.DD_MM:\n            return {selectedYear: '', selectedMonth: _month, selectedDay: _day};\n        case DATE_TYPE.YYYY:\n            return {selectedYear: _year, selectedMonth: '', selectedDay: ''};\n        case DATE_TYPE.MM:\n            return {selectedYear: '', selectedMonth: _month, selectedDay: ''};\n        case DATE_TYPE.DD:\n            return {selectedYear: '', selectedMonth: '', selectedDay: _day};\n        default:\n            return {selectedYear: _year, selectedMonth: _month, selectedDay: _day};\n    }\n}\n\n/**\n * Only for Date Picker\n *\n * Construct dates according to given two dates\n * @param monthDisplayMode\n * @param startDate A string date like '2019-05-20'\n * @param endDate A string date like '2020-06-02'\n * @returns {[]} Return a date array consists of year, month and day such as [{date: 2019, data: [{date: 6, data: [{date: 1}, {date: 2}]}].\n */\nfunction constructDatePickerDates(monthDisplayMode: string, startDate: string, endDate: string) {\n\n    const startArr = startDate.split('-');\n    const endArr = endDate.split('-');\n    const startYear = +startArr[0];\n    const endYear = +endArr[0];\n    const startMonth = +startArr[1];\n    const endMonth = +endArr[1];\n    const startDay = +startArr[2];\n    const endDay = +endArr[2];\n    const dates = [];\n\n    for (let year = startYear; year <= endYear; year++) {\n        const yearObj = {date: year};\n\n        let _startMonth = startMonth;\n        let _endMonth = endMonth;\n\n        if (startYear === endYear) { // Only one year\n            // Do nothing. Use the default value above\n        } else if (year === startYear) { // At least two years\n            _endMonth = 12;\n        } else if (year === endYear) { // At least two years\n            _startMonth = 1;\n        } else { // At least three years\n            _startMonth = 1;\n            _endMonth = 12;\n        }\n\n        const months = [];\n        for (let month = _startMonth; month <= _endMonth; month++) {\n            const monthObj = {date: getDatePickerMonth(monthDisplayMode, month)};\n\n            // Get the days in a month\n            const maxDay = getDaysInMonth(year, month);\n\n            let _startDay = startDay;\n            let _endDay = endDay;\n\n            if (year > startYear && year < endYear) {\n                _startDay = 1;\n                _endDay = maxDay;\n            } else {\n                if (_startMonth === _endMonth) {\n                    _startDay = startYear === endYear || year === startYear ? startDay : 1;\n                    _endDay = startYear === endYear || year === endYear ? endDay : maxDay;\n                } else if (month === _startMonth) {\n                    _startDay = startYear === endYear || year === startYear ? startDay : 1;\n                    _endDay = maxDay;\n                } else if (month === _endMonth) {\n                    _startDay = 1;\n                    _endDay = startYear === endYear || year === endYear ? endDay : maxDay;\n                } else {\n                    _startDay = 1;\n                    _endDay = maxDay;\n                }\n            }\n\n            const days = [];\n            for (let day = _startDay; day <= _endDay; day++) {\n                const dayObj = {date: day};\n                days.push(dayObj);\n            }\n\n            monthObj.data = days;\n            months.push(monthObj);\n        }\n\n        yearObj.data = months;\n        dates.push(yearObj);\n    }\n\n    return dates;\n}\n\n/**\n * Only for Date Picker\n *\n * Returns the month's displaying text based on both the month given from 1 to 12 and month display mode.\n * @param monthDisplayMode A string type representing the display mode of month\n * @param month A numeric value representing a specific month\n * @returns number or string type\n */\nfunction getDatePickerMonth(monthDisplayMode: string, month: number) {\n    if (Object.values(MONTH_DISPLAY_MODE).indexOf(monthDisplayMode) < 0) return month;\n    switch (monthDisplayMode) {\n        case MONTH_DISPLAY_MODE.DIGIT:\n            return month;\n        case MONTH_DISPLAY_MODE.EN_SHORT:\n            return DEFAULT_MONTH_SHORT[month - 1];\n        case MONTH_DISPLAY_MODE.EN_LONG:\n            return DEFAULT_MONTH_LONG[month - 1];\n        default:\n            return month;\n    }\n}\n\n/**\n * Only for Date Picker\n *\n * Assert date parameters through comparing them.\n * @param maxDate A string\n * @param minDate A string\n * @param defaultDate A string\n */\nfunction assertDate(maxDate: string, minDate: string, defaultDate: string) {\n\n    let errorMsg = '';\n    if (!greaterThanOrEqualTo(defaultDate, minDate)) {\n        errorMsg = `Error! defaultDate must be greater than or equal to minDate! But defaultDate: ${defaultDate} is less than minDate: ${minDate}`;\n    }\n\n    if (!greaterThanOrEqualTo(maxDate, defaultDate)) {\n        errorMsg = `Error! maxDate must be greater than or equal to defaultDate! But maxDate: ${maxDate} is less than defaultDate: ${defaultDate}`;\n    }\n\n    if (!greaterThanOrEqualTo(maxDate, minDate)) {\n        errorMsg = `Error! maxDate must be greater than or equal to minDate! But maxDate: ${maxDate} is less than minDate: ${minDate}`;\n    }\n\n    __DEV__ && errorMsg && errorMsg.length && console.error(errorMsg);\n}\n\n/**\n * NOTE: Bad performance for Date.parse(startDate.replace(/-/g, '/')) < Date.parse(_d.replace(/-/g, '/')). So using the following\n * comparison method can greatly improve performance. If interested, you can have a try.\n *\n * Compare two date. If date > another, returns true, else false.\n * @param date  A string type representing a date like \"2020-1-10\"\n * @param another A string type representing a date like \"2019-06-15\"\n * @returns {boolean}\n */\nexport function greaterThan(date: string, another: string) {\n    if (!date || typeof date !== 'string' || !another || typeof another !== 'string') return false;\n    const dateArr = date.replace(/\\//g, '-').split('-');\n    const anotherArr = another.replace(/\\//g, '-').split('-');\n    if (parseInt(dateArr[0]) > parseInt(anotherArr[0])) return true;\n    if (parseInt(dateArr[0]) === parseInt(anotherArr[0])) {\n        if (parseInt(dateArr[1]) > parseInt(anotherArr[1])) return true;\n        if (parseInt(dateArr[1]) === parseInt(anotherArr[1])) return parseInt(dateArr[2]) > parseInt(anotherArr[2]);  // return day1 > day2\n    }\n    return false;\n}\n\n/**\n * Compare two date. If date >= another, returns true, else false.\n * @param date  A string type representing a date\n * @param another A string type representing a date\n * @returns {boolean}\n */\nexport function greaterThanOrEqualTo(date: string, another: string) {\n    if (!date || typeof date !== 'string' || !another || typeof another !== 'string') return false;\n    if (date === another) return true;\n    const dateArr = date.replace(/\\//g, '-').split('-');\n    const anotherArr = another.replace(/\\//g, '-').split('-');\n    if (parseInt(dateArr[0]) > parseInt(anotherArr[0])) return true;\n    if (parseInt(dateArr[0]) === parseInt(anotherArr[0])) {\n        if (parseInt(dateArr[1]) > parseInt(anotherArr[1])) return true;\n        if (parseInt(dateArr[1]) === parseInt(anotherArr[1])) return parseInt(dateArr[2]) >= parseInt(anotherArr[2]);\n    }\n    return false;\n}\n\n/**\n * Convert a date string into a standard date string. For example, your can convert \"2020-1-6\" into \"2020-01-06\".\n * Note: \"2020-June-1\" will be converted into \"2020-06-01\", \"-June-1\" into \"06-01\", \"-June-\" into \"06\" that represents\n * type={\"MM\"}. In the same way, if type={\"DD\"}, \"--5\" will be converted into \"05\".\n * @param monthDisplayMode\n * @param date a date string to be converted.\n */\nexport function toStandardStringWith(date: string, monthDisplayMode: string = ''): string {\n    if (!date || typeof date !== 'string') return date;\n    const dates = date.replace(/\\//g, '-').split('-');\n\n    if (dates.length !== 3) {\n        __DEV__ && console.warn('Sorry! date string format is incorrect!');\n        return date;\n    }\n\n    let year = dates[0];\n    let day = dates[2];\n    let month = dates[1];\n    if (monthDisplayMode === MONTH_DISPLAY_MODE.EN_SHORT) {\n        month = DEFAULT_MONTH_SHORT.indexOf(month) >= 0 ? (DEFAULT_MONTH_SHORT.indexOf(month) + 1).toString() : month;\n    }\n\n    if (monthDisplayMode === MONTH_DISPLAY_MODE.EN_LONG) {\n        month = DEFAULT_MONTH_LONG.indexOf(month) >= 0 ? (DEFAULT_MONTH_LONG.indexOf(month) + 1).toString() : month;\n    }\n\n    year = year.length ? (year + (month.length ? '-' : '')) : '';\n    const monthDash = day.length ? '-' : '';\n    month = month.length ? (month.length === 1 ? `0${month}${monthDash}` : `${month}${monthDash}`) : '';\n    day = day.length ? (day.length === 1 ? `0${day}` : `${day}`) : '';\n\n    return year + month + day;\n}\n"]},"metadata":{},"sourceType":"module"}