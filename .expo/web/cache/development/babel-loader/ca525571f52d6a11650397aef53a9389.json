{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\app\\\\rn-starter\\\\node_modules\\\\react-native-common-date-picker\\\\src\\\\datePicker\\\\DatePickerList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport styles from \"./style\";\nimport { BORDER_LINE_POSITION, DATE_KEY_TYPE } from \"../contants\";\n\nvar DatePickerList = function (_Component) {\n  _inherits(DatePickerList, _Component);\n\n  var _super = _createSuper(DatePickerList);\n\n  function DatePickerList(props) {\n    var _this;\n\n    _classCallCheck(this, DatePickerList);\n\n    _this = _super.call(this, props);\n\n    _this._getData = function () {\n      var _this$props = _this.props,\n          rows = _this$props.rows,\n          data = _this$props.data;\n\n      var _row = (rows - 1) / 2;\n\n      var dataSource = data.slice();\n\n      for (var i = 0; i < _row; i++) {\n        dataSource.unshift({\n          date: ''\n        });\n        dataSource.push({\n          date: ''\n        });\n      }\n\n      return dataSource;\n    };\n\n    _this._maxIndex = function () {\n      var rows = _this.props.rows;\n      var _this$state = _this.state,\n          data = _this$state.data,\n          initialRow = _this$state.initialRow;\n      var length = data.length;\n      var maxScrollIndex = length - rows;\n      var maxSelectedIndex = length - 1 - initialRow;\n      return {\n        maxScrollIndex: maxScrollIndex,\n        maxSelectedIndex: maxSelectedIndex\n      };\n    };\n\n    _this._scrollEnd = function (_ref) {\n      var contentOffset = _ref.contentOffset;\n\n      _this._removeTimer();\n\n      var y = contentOffset.y;\n      var rowHeight = _this.state.rowHeight;\n\n      var _this$_maxIndex = _this._maxIndex(),\n          maxScrollIndex = _this$_maxIndex.maxScrollIndex;\n\n      var maxOffsetY = maxScrollIndex * rowHeight;\n      var offsetY = y < 0 ? 0 : Math.min(maxOffsetY, y);\n      var index = Math.round(offsetY / rowHeight);\n\n      _this._scrollToIndex(index);\n    };\n\n    _this._scrollToIndex = function (index) {\n      _this.props.onValueChange(index);\n\n      _this.flatList.scrollToIndex({\n        index: index,\n        animated: false\n      });\n    };\n\n    _this._removeTimer = function () {\n      return _this.timer && clearTimeout(_this.timer);\n    };\n\n    _this._onMomentumScrollEnd = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      return _this._scrollEnd(nativeEvent);\n    };\n\n    _this._onScrollEndDrag = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n\n      _this._removeTimer();\n\n      _this.timer = setTimeout(function () {\n        _this._scrollEnd(nativeEvent);\n      }, 150);\n    };\n\n    _this._getFlatListStyle = function () {\n      var textMarginHorizontal = _this.state.textMarginHorizontal;\n      var _this$props2 = _this.props,\n          width = _this$props2.width,\n          dataLength = _this$props2.dataLength,\n          dataIndex = _this$props2.dataIndex;\n      var lastIndex = dataLength - 1;\n      var style = {\n        width: width\n      };\n\n      if (dataLength >= 2) {\n        if (dataIndex === 0) {\n          style.paddingLeft = textMarginHorizontal;\n        }\n\n        if (dataIndex === lastIndex) {\n          style.paddingRight = textMarginHorizontal;\n        }\n      }\n\n      return style;\n    };\n\n    _this._itemTextStyle = function (index) {\n      var selectedIndex = _this.state.selectedIndex;\n      var _this$props3 = _this.props,\n          selectedTextFontSize = _this$props3.selectedTextFontSize,\n          selectedTextColor = _this$props3.selectedTextColor,\n          unselectedTextColor = _this$props3.unselectedTextColor;\n      var style = {};\n      var selected = selectedIndex === index;\n\n      if (selected) {\n        style.color = selectedTextColor;\n        style.fontSize = +selectedTextFontSize;\n        return style;\n      }\n\n      style.color = unselectedTextColor;\n\n      if (index === selectedIndex - 1 || index === selectedIndex + 1) {\n        style.fontSize = +selectedTextFontSize - 3;\n      } else if (index === selectedIndex - 2 || index === selectedIndex + 2) {\n        style.fontSize = +selectedTextFontSize - 6;\n      } else {\n        style.fontSize = +selectedTextFontSize - 8;\n      }\n\n      return style;\n    };\n\n    _this._lineStyle = function (position) {\n      var _this$props4 = _this.props,\n          width = _this$props4.width,\n          selectedBorderLineColor = _this$props4.selectedBorderLineColor,\n          selectedBorderLineWidth = _this$props4.selectedBorderLineWidth,\n          selectedRowBackgroundColor = _this$props4.selectedRowBackgroundColor,\n          unselectedRowBackgroundColor = _this$props4.unselectedRowBackgroundColor,\n          dataLength = _this$props4.dataLength,\n          dataIndex = _this$props4.dataIndex;\n      var _this$state2 = _this.state,\n          initialRow = _this$state2.initialRow,\n          rowHeight = _this$state2.rowHeight,\n          selectedBorderLineMarginHorizontal = _this$state2.selectedBorderLineMarginHorizontal;\n      var marginHorizontal = selectedBorderLineMarginHorizontal;\n      var marginLeft = selectedBorderLineMarginHorizontal;\n      var lastIndex = dataLength - 1;\n\n      if (dataIndex !== 0 && dataIndex !== lastIndex) {\n        marginLeft = 0;\n        marginHorizontal = 0;\n      } else {\n        if (dataIndex === lastIndex) {\n          marginLeft = 0;\n        }\n      }\n\n      return {\n        position: 'absolute',\n        width: width - marginHorizontal,\n        marginLeft: marginLeft,\n        height: position === BORDER_LINE_POSITION.MIDDLE ? rowHeight : initialRow * rowHeight,\n        borderTopWidth: position === BORDER_LINE_POSITION.MIDDLE ? +selectedBorderLineWidth : 0,\n        borderBottomWidth: position === BORDER_LINE_POSITION.MIDDLE ? +selectedBorderLineWidth : 0,\n        borderTopColor: selectedBorderLineColor,\n        borderBottomColor: selectedBorderLineColor,\n        marginTop: position === BORDER_LINE_POSITION.MIDDLE ? rowHeight * initialRow : position === BORDER_LINE_POSITION.TOP ? 0 : (initialRow + 1) * rowHeight,\n        backgroundColor: position === BORDER_LINE_POSITION.MIDDLE ? selectedRowBackgroundColor : unselectedRowBackgroundColor\n      };\n    };\n\n    _this._onScroll = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n\n      _this._removeTimer();\n\n      var _this$state3 = _this.state,\n          rowHeight = _this$state3.rowHeight,\n          initialRow = _this$state3.initialRow;\n      var offsetY = nativeEvent.contentOffset.y;\n\n      var _this$_maxIndex2 = _this._maxIndex(),\n          maxSelectedIndex = _this$_maxIndex2.maxSelectedIndex;\n\n      var selectedIndex = offsetY <= 0 ? initialRow : Math.round(offsetY / rowHeight) + initialRow;\n\n      _this.setState({\n        selectedIndex: Math.min(selectedIndex, maxSelectedIndex)\n      });\n    };\n\n    _this._renderItem = function (_ref5) {\n      var item = _ref5.item,\n          index = _ref5.index;\n      var _this$props5 = _this.props,\n          keyType = _this$props5.keyType,\n          yearSuffix = _this$props5.yearSuffix,\n          monthSuffix = _this$props5.monthSuffix,\n          daySuffix = _this$props5.daySuffix;\n      var suffix = keyType === DATE_KEY_TYPE.YEAR ? yearSuffix : keyType === DATE_KEY_TYPE.MONTH ? monthSuffix : daySuffix;\n      return React.createElement(View, {\n        style: [styles.datePickerListItemView, {\n          height: _this.state.rowHeight\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: _this._itemTextStyle(index),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, item.date, !item.date || suffix));\n    };\n\n    var _rows = props.rows,\n        _rowHeight = props.rowHeight,\n        _selectedBorderLineMarginHorizontal = props.selectedBorderLineMarginHorizontal,\n        _textMarginHorizontal = props.textMarginHorizontal;\n    __DEV__ && _rows !== 5 && _rows !== 7 && console.error('Oops! Rows is only supported by one of [5, 7]');\n\n    var _initialRow = (_rows - 1) / 2;\n\n    _this.state = {\n      data: _this._getData(),\n      initialRow: _initialRow,\n      selectedIndex: _initialRow,\n      isScrolling: false,\n      rowHeight: +_rowHeight,\n      selectedBorderLineMarginHorizontal: +_selectedBorderLineMarginHorizontal,\n      textMarginHorizontal: +_textMarginHorizontal\n    };\n    return _this;\n  }\n\n  _createClass(DatePickerList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (JSON.stringify(this.props.data) !== JSON.stringify(prevProps.data)) {\n        var data = this._getData();\n\n        this.setState({\n          data: data\n        }, function () {\n          var _this2$state = _this2.state,\n              selectedIndex = _this2$state.selectedIndex,\n              initialRow = _this2$state.initialRow;\n\n          var _this2$_maxIndex = _this2._maxIndex(),\n              maxScrollIndex = _this2$_maxIndex.maxScrollIndex,\n              maxSelectedIndex = _this2$_maxIndex.maxSelectedIndex;\n\n          var previousScrollIndex = selectedIndex - initialRow;\n          var index = selectedIndex > maxSelectedIndex ? maxScrollIndex : previousScrollIndex;\n\n          _this2._scrollToIndex(index);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._removeTimer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props6 = this.props,\n          rows = _this$props6.rows,\n          initialScrollIndex = _this$props6.initialScrollIndex;\n      var _this$state4 = this.state,\n          data = _this$state4.data,\n          rowHeight = _this$state4.rowHeight,\n          initialRow = _this$state4.initialRow;\n      var heightOfContainer = rows * rowHeight;\n\n      var _this$_maxIndex3 = this._maxIndex(),\n          maxScrollIndex = _this$_maxIndex3.maxScrollIndex;\n\n      return React.createElement(View, {\n        style: {\n          height: heightOfContainer\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        pointerEvents: 'box-none',\n        style: this._lineStyle(BORDER_LINE_POSITION.TOP),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        pointerEvents: 'box-none',\n        style: this._lineStyle(BORDER_LINE_POSITION.MIDDLE),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        pointerEvents: 'box-none',\n        style: this._lineStyle(BORDER_LINE_POSITION.BOTTOM),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }), React.createElement(FlatList, {\n        ref: function ref(_ref6) {\n          return _this3.flatList = _ref6;\n        },\n        style: this._getFlatListStyle(),\n        data: data,\n        initialScrollIndex: Math.min(initialScrollIndex, maxScrollIndex),\n        getItemLayout: function getItemLayout(data, index) {\n          return {\n            length: rowHeight,\n            offset: index * rowHeight,\n            index: index\n          };\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        renderItem: this._renderItem,\n        onScroll: this._onScroll,\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        scrollsToTop: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DatePickerList;\n}(Component);\n\nDatePickerList.propTypes = {\n  keyType: PropTypes.string,\n  initialScrollIndex: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  onValueChange: PropTypes.func,\n  data: PropTypes.array,\n  rows: PropTypes.oneOf([5, 7]),\n  rowHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selectedRowBackgroundColor: PropTypes.string,\n  unselectedRowBackgroundColor: PropTypes.string,\n  selectedBorderLineColor: PropTypes.string,\n  selectedBorderLineWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selectedBorderLineMarginHorizontal: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selectedTextFontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selectedTextColor: PropTypes.string,\n  unselectedTextColor: PropTypes.string,\n  textMarginHorizontal: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  yearSuffix: PropTypes.string,\n  monthSuffix: PropTypes.string,\n  daySuffix: PropTypes.string\n};\nexport default DatePickerList;","map":{"version":3,"sources":["E:/app/rn-starter/node_modules/react-native-common-date-picker/src/datePicker/DatePickerList.js"],"names":["React","Component","PropTypes","styles","BORDER_LINE_POSITION","DATE_KEY_TYPE","DatePickerList","props","_getData","rows","data","_row","dataSource","slice","i","unshift","date","push","_maxIndex","state","initialRow","length","maxScrollIndex","maxSelectedIndex","_scrollEnd","contentOffset","_removeTimer","y","rowHeight","maxOffsetY","offsetY","Math","min","index","round","_scrollToIndex","onValueChange","flatList","scrollToIndex","animated","timer","clearTimeout","_onMomentumScrollEnd","nativeEvent","_onScrollEndDrag","setTimeout","_getFlatListStyle","textMarginHorizontal","width","dataLength","dataIndex","lastIndex","style","paddingLeft","paddingRight","_itemTextStyle","selectedIndex","selectedTextFontSize","selectedTextColor","unselectedTextColor","selected","color","fontSize","_lineStyle","position","selectedBorderLineColor","selectedBorderLineWidth","selectedRowBackgroundColor","unselectedRowBackgroundColor","selectedBorderLineMarginHorizontal","marginHorizontal","marginLeft","height","MIDDLE","borderTopWidth","borderBottomWidth","borderTopColor","borderBottomColor","marginTop","TOP","backgroundColor","_onScroll","setState","_renderItem","item","keyType","yearSuffix","monthSuffix","daySuffix","suffix","YEAR","MONTH","datePickerListItemView","__DEV__","console","error","isScrolling","prevProps","prevState","JSON","stringify","previousScrollIndex","initialScrollIndex","heightOfContainer","BOTTOM","ref","offset","toString","propTypes","string","number","isRequired","func","array","oneOf","oneOfType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {FlatList, Text, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './style';\nimport {BORDER_LINE_POSITION, DATE_KEY_TYPE} from '../contants';\n\nclass DatePickerList extends Component {\n\n    static propTypes = {\n        keyType: PropTypes.string,\n        initialScrollIndex: PropTypes.number,\n        width: PropTypes.number.isRequired,\n        onValueChange: PropTypes.func,\n        data: PropTypes.array,\n        rows: PropTypes.oneOf([5, 7]),\n        rowHeight: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        selectedRowBackgroundColor: PropTypes.string,\n        unselectedRowBackgroundColor: PropTypes.string,\n        selectedBorderLineColor: PropTypes.string,\n        selectedBorderLineWidth: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        selectedBorderLineMarginHorizontal: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        selectedTextFontSize: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        selectedTextColor: PropTypes.string,\n        unselectedTextColor: PropTypes.string,\n        textMarginHorizontal: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        yearSuffix: PropTypes.string,\n        monthSuffix: PropTypes.string,\n        daySuffix: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n        const {rows, rowHeight, selectedBorderLineMarginHorizontal, textMarginHorizontal} = props;\n        __DEV__ && (rows !== 5 && rows !== 7) && console.error('Oops! Rows is only supported by one of [5, 7]');\n        const initialRow = (rows - 1) / 2;\n        this.state = {\n            data: this._getData(),\n            initialRow,\n            selectedIndex: initialRow,\n            isScrolling: false,\n            rowHeight: +rowHeight,\n            selectedBorderLineMarginHorizontal: +selectedBorderLineMarginHorizontal,\n            textMarginHorizontal: +textMarginHorizontal,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(this.props.data) !== JSON.stringify(prevProps.data)) {\n            const data = this._getData();\n            this.setState({data}, () => {\n                const {selectedIndex, initialRow} = this.state;\n                const {maxScrollIndex, maxSelectedIndex} = this._maxIndex();\n                const previousScrollIndex = selectedIndex - initialRow;\n                const index = selectedIndex > maxSelectedIndex ? maxScrollIndex : previousScrollIndex;\n                this._scrollToIndex(index);\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this._removeTimer();\n    }\n\n    _getData = () => {\n        const {rows, data} = this.props;\n        const _row = (rows - 1) / 2;\n        const dataSource = data.slice();\n        for (let i = 0; i < _row; i++) {\n            dataSource.unshift({date: ''});\n            dataSource.push({date: ''});\n        }\n        return dataSource;\n    };\n\n    _maxIndex = () => {\n        const {rows} = this.props;\n        const {data, initialRow} = this.state;\n        const length = data.length;\n        const maxScrollIndex = length - rows;\n        const maxSelectedIndex = length - 1 - initialRow;\n        return {maxScrollIndex, maxSelectedIndex};\n    };\n\n    _scrollEnd = ({contentOffset}) => {\n        this._removeTimer();\n        const y = contentOffset.y;\n        const {rowHeight} = this.state;\n        const {maxScrollIndex} = this._maxIndex();\n        const maxOffsetY = maxScrollIndex * rowHeight;\n        const offsetY = y < 0 ? 0 : Math.min(maxOffsetY, y);\n        const index = Math.round(offsetY / rowHeight);\n        this._scrollToIndex(index);\n    };\n\n    _scrollToIndex = index => {\n        this.props.onValueChange(index);\n        this.flatList.scrollToIndex({index, animated: false});\n    };\n\n    _removeTimer = () => this.timer && clearTimeout(this.timer);\n\n    _onMomentumScrollEnd = ({nativeEvent}) => this._scrollEnd(nativeEvent);\n\n    _onScrollEndDrag = ({nativeEvent}) => {\n        this._removeTimer();\n        /**\n         * When user is scrolling the scroll view fast, this method will be executed first. After this method is executed,\n         * \"_onMomentumScrollEnd\" method will be triggered and go on calling \"_scrollEnd\". So this.timer here\n         * to avoid conflict between them.\n         */\n        this.timer = setTimeout(() => {\n            this._scrollEnd(nativeEvent);\n        }, 150);\n    };\n\n    _getFlatListStyle = () => {\n        const {textMarginHorizontal} = this.state;\n        const {width, dataLength, dataIndex} = this.props;\n        const lastIndex = dataLength - 1;\n        const style = {width};\n        if (dataLength >= 2) {\n            if (dataIndex === 0) {\n                style.paddingLeft = textMarginHorizontal;\n            }\n            if (dataIndex === lastIndex) {\n                style.paddingRight = textMarginHorizontal;\n            }\n        }\n        return style;\n    };\n\n    _itemTextStyle = index => {\n        const {selectedIndex} = this.state;\n        const {\n            selectedTextFontSize,\n            selectedTextColor,\n            unselectedTextColor,\n        } = this.props;\n        const style = {};\n        const selected = selectedIndex === index;\n        if (selected) {\n            style.color = selectedTextColor;\n            style.fontSize = +selectedTextFontSize;\n            return style;\n        }\n        style.color = unselectedTextColor;\n        if (index === selectedIndex - 1 || index === selectedIndex + 1) {\n            style.fontSize = +selectedTextFontSize - 3;\n        } else if (index === selectedIndex - 2 || index === selectedIndex + 2) {\n            style.fontSize = +selectedTextFontSize - 6;\n        } else {\n            style.fontSize = +selectedTextFontSize - 8;\n        }\n        return style;\n    };\n\n    _lineStyle = position => {\n\n        const {\n            width,\n            selectedBorderLineColor,\n            selectedBorderLineWidth,\n            selectedRowBackgroundColor,\n            unselectedRowBackgroundColor,\n            dataLength,\n            dataIndex,\n        } = this.props;\n        const {initialRow, rowHeight, selectedBorderLineMarginHorizontal} = this.state;\n\n        let marginHorizontal = selectedBorderLineMarginHorizontal;\n        let marginLeft = selectedBorderLineMarginHorizontal;\n        const lastIndex = dataLength - 1;\n        if (dataIndex !== 0 && dataIndex !== lastIndex) {\n            marginLeft = 0;\n            marginHorizontal = 0;\n        } else {\n            if (dataIndex === lastIndex) {\n                marginLeft = 0;\n            }\n        }\n\n        return {\n            position: 'absolute',\n            width: width - marginHorizontal,\n            marginLeft,\n            height: position === BORDER_LINE_POSITION.MIDDLE ? rowHeight : initialRow * rowHeight,\n            borderTopWidth: position === BORDER_LINE_POSITION.MIDDLE ? +selectedBorderLineWidth : 0,\n            borderBottomWidth: position === BORDER_LINE_POSITION.MIDDLE ? +selectedBorderLineWidth : 0,\n            borderTopColor: selectedBorderLineColor,\n            borderBottomColor: selectedBorderLineColor,\n            marginTop: position === BORDER_LINE_POSITION.MIDDLE ? rowHeight * initialRow : (position === BORDER_LINE_POSITION.TOP ? 0 : (initialRow + 1) * rowHeight),\n            backgroundColor: position === BORDER_LINE_POSITION.MIDDLE ? selectedRowBackgroundColor : unselectedRowBackgroundColor,\n        };\n    };\n\n    _onScroll = ({nativeEvent}) => {\n        this._removeTimer();\n        const {rowHeight, initialRow} = this.state;\n        const offsetY = nativeEvent.contentOffset.y;\n        const {maxSelectedIndex} = this._maxIndex();\n        const selectedIndex = offsetY <= 0 ? initialRow : (Math.round(offsetY / rowHeight) + initialRow);\n        this.setState({selectedIndex: Math.min(selectedIndex, maxSelectedIndex)});\n    };\n\n    _renderItem = ({item, index}) => {\n        const {keyType, yearSuffix, monthSuffix, daySuffix} = this.props;\n        const suffix = keyType === DATE_KEY_TYPE.YEAR ? yearSuffix : (keyType === DATE_KEY_TYPE.MONTH ? monthSuffix : daySuffix);\n        return (<View style={[styles.datePickerListItemView, {height: this.state.rowHeight}]}>\n            <Text style={this._itemTextStyle(index)}>{item.date}{!item.date || suffix}</Text>\n        </View>);\n    };\n\n    render() {\n        const {rows, initialScrollIndex} = this.props;\n        const {data, rowHeight, initialRow} = this.state;\n        const heightOfContainer = rows * rowHeight;\n        const {maxScrollIndex} = this._maxIndex();\n        return (\n            <View style={{height: heightOfContainer}}>\n                <View pointerEvents={'box-none'} style={this._lineStyle(BORDER_LINE_POSITION.TOP)}/>\n                <View pointerEvents={'box-none'} style={this._lineStyle(BORDER_LINE_POSITION.MIDDLE)}/>\n                <View pointerEvents={'box-none'} style={this._lineStyle(BORDER_LINE_POSITION.BOTTOM)}/>\n                <FlatList\n                    ref={ref => this.flatList = ref}\n                    style={this._getFlatListStyle()}\n                    data={data}\n                    initialScrollIndex={Math.min(initialScrollIndex, maxScrollIndex)}\n                    getItemLayout={(data, index) => ({length: rowHeight, offset: index * rowHeight, index})}\n                    keyExtractor={(item, index) => index.toString()}\n                    onScrollEndDrag={this._onScrollEndDrag}\n                    onMomentumScrollEnd={this._onMomentumScrollEnd}\n                    renderItem={this._renderItem}\n                    onScroll={this._onScroll}\n                    showsVerticalScrollIndicator={false}\n                    showsHorizontalScrollIndicator={false}\n                    scrollsToTop={false}\n                />\n            </View>\n        );\n    }\n\n}\n\nexport default DatePickerList;\n"]},"metadata":{},"sourceType":"module"}