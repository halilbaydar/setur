{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\app\\\\rn-starter\\\\node_modules\\\\react-native-common-date-picker\\\\src\\\\calendar\\\\CalendarList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport * as Constants from \"../contants\";\nimport WeekBar from \"./components/WeekBar\";\nimport ToolBar from \"../components/ToolBar\";\nimport ListItem from \"./components/ListItem\";\n\nvar CalendarList = function (_Component) {\n  _inherits(CalendarList, _Component);\n\n  var _super = _createSuper(CalendarList);\n\n  function CalendarList() {\n    var _this;\n\n    _classCallCheck(this, CalendarList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dataSource: [],\n      startDate: '',\n      endDate: ''\n    };\n\n    _this._selectDate = function (date, index) {\n      var _this$state = _this.state,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate;\n\n      if (startDate && endDate) {\n        _this.setState({\n          startDate: date,\n          endDate: ''\n        });\n\n        return;\n      }\n\n      if (startDate) {\n        var isBigger = Constants.greaterThan(startDate, date);\n\n        _this.setState({\n          startDate: isBigger ? date : startDate,\n          endDate: isBigger ? startDate : date\n        });\n      } else {\n        _this.setState({\n          startDate: date\n        });\n      }\n\n      var onPressDate = _this.props.onPressDate;\n      onPressDate && typeof onPressDate === 'function' && onPressDate(Constants.toStandardStringWith(date), index);\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var _this$props = _this.props,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate,\n          headerTitleType = _this$props.headerTitleType,\n          listItemStyle = _this$props.listItemStyle,\n          selectedDateMarkColor = _this$props.selectedDateMarkColor,\n          selectedDateMarkRangeColor = _this$props.selectedDateMarkRangeColor,\n          beyondDatesDisabled = _this$props.beyondDatesDisabled,\n          beyondDatesDisabledTextColor = _this$props.beyondDatesDisabledTextColor,\n          horizontal = _this$props.horizontal,\n          _rightArrowClick = _this$props.rightArrowClick,\n          _leftArrowClick = _this$props.leftArrowClick,\n          hideArrow = _this$props.hideArrow,\n          arrowAlign = _this$props.arrowAlign,\n          arrowColor = _this$props.arrowColor,\n          arrowSize = _this$props.arrowSize;\n      return React.createElement(ListItem, _extends({}, _this.props, {\n        item: item,\n        startDate: _this.state.startDate,\n        endDate: _this.state.endDate,\n        minDate: Constants.validateDate(minDate),\n        maxDate: Constants.validateDate(maxDate),\n        selectDate: _this._selectDate,\n        headerTitleType: headerTitleType,\n        listItemStyle: listItemStyle,\n        selectedDateMarkColor: selectedDateMarkColor,\n        selectedDateMarkRangeColor: selectedDateMarkRangeColor,\n        beyondDatesDisabled: beyondDatesDisabled,\n        beyondDatesDisabledTextColor: beyondDatesDisabledTextColor,\n        horizontal: horizontal,\n        leftArrowClick: function leftArrowClick() {\n          if (_leftArrowClick && typeof _leftArrowClick === 'function') {\n            _leftArrowClick(index);\n\n            return;\n          }\n\n          if (_this.props.inverted) {\n            if (index !== _this.state.dataSource.length - 1) {\n              _this.flatList.scrollToIndex({\n                index: index + 1\n              });\n            }\n          } else {\n            if (index !== 0) {\n              _this.flatList.scrollToIndex({\n                index: index - 1\n              });\n            }\n          }\n        },\n        rightArrowClick: function rightArrowClick() {\n          if (_rightArrowClick && typeof _rightArrowClick === 'function') {\n            _rightArrowClick(index);\n\n            return;\n          }\n\n          if (_this.props.inverted) {\n            if (index !== 0) {\n              _this.flatList.scrollToIndex({\n                index: index - 1\n              });\n            }\n          } else {\n            if (index !== _this.state.dataSource.length - 1) {\n              _this.flatList.scrollToIndex({\n                index: index + 1\n              });\n            }\n          }\n        },\n        hideArrow: hideArrow,\n        arrowColor: arrowColor,\n        arrowSize: arrowSize,\n        arrowAlign: arrowAlign,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }\n      }));\n    };\n\n    _this.scrollToIndex = function (params) {\n      return _this.flatList.scrollToIndex(params);\n    };\n\n    _this.scrollToItem = function (params) {\n      return _this.flatList.scrollToItem(params);\n    };\n\n    _this.scrollToOffset = function (params) {\n      return _this.flatList.scrollToOffset(params);\n    };\n\n    _this.scrollToEnd = function (params) {\n      return _this.flatList.scrollToEnd(params);\n    };\n\n    return _this;\n  }\n\n  _createClass(CalendarList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          minDate = _this$props2.minDate,\n          maxDate = _this$props2.maxDate,\n          firstDayOnWeeks = _this$props2.firstDayOnWeeks;\n      this.setState({\n        dataSource: Constants.getCalendarDates(Constants.validateDate(minDate), Constants.validateDate(maxDate), firstDayOnWeeks)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          horizontal = _this$props3.horizontal,\n          showsHorizontalScrollIndicator = _this$props3.showsHorizontalScrollIndicator,\n          showsVerticalScrollIndicator = _this$props3.showsVerticalScrollIndicator,\n          scrollEnabled = _this$props3.scrollEnabled,\n          pagingEnabled = _this$props3.pagingEnabled,\n          containerStyle = _this$props3.containerStyle,\n          scrollContentStyle = _this$props3.scrollContentStyle,\n          showToolBar = _this$props3.showToolBar,\n          toolBarPosition = _this$props3.toolBarPosition,\n          toolBarStyle = _this$props3.toolBarStyle,\n          toolBarCancelStyle = _this$props3.toolBarCancelStyle,\n          toolBarConfirmStyle = _this$props3.toolBarConfirmStyle,\n          titleStyle = _this$props3.titleStyle,\n          titleText = _this$props3.titleText,\n          cancelText = _this$props3.cancelText,\n          confirmText = _this$props3.confirmText,\n          _cancel = _this$props3.cancel,\n          _confirm = _this$props3.confirm,\n          cancelDisabled = _this$props3.cancelDisabled,\n          confirmDisabled = _this$props3.confirmDisabled,\n          showWeeks = _this$props3.showWeeks,\n          weeks = _this$props3.weeks,\n          weeksChineseType = _this$props3.weeksChineseType,\n          firstDayOnWeeks = _this$props3.firstDayOnWeeks,\n          weeksStyle = _this$props3.weeksStyle,\n          weeksTextStyle = _this$props3.weeksTextStyle;\n\n      var _wks = weeksChineseType && weeks === Constants.DEFAULT_WEEK_EN ? Constants.DEFAULT_WEEK_ZH : weeks;\n\n      var _weeks = Constants.getWeekDays(_wks, firstDayOnWeeks);\n\n      var _toolBar = React.createElement(ToolBar, {\n        style: toolBarStyle,\n        cancelStyle: toolBarCancelStyle,\n        confirmStyle: toolBarConfirmStyle,\n        titleStyle: titleStyle,\n        titleText: titleText,\n        cancelText: cancelText,\n        cancel: function cancel() {\n          return _cancel && typeof _cancel === 'function' && _cancel();\n        },\n        confirm: function confirm() {\n          var _this2$state = _this2.state,\n              startDate = _this2$state.startDate,\n              endDate = _this2$state.endDate;\n          var dates = [Constants.toStandardStringWith(startDate), Constants.toStandardStringWith(endDate)];\n          _confirm && typeof _confirm === 'function' && _confirm(dates);\n        },\n        confirmText: confirmText,\n        cancelDisabled: cancelDisabled,\n        confirmDisabled: confirmDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 27\n        }\n      });\n\n      return React.createElement(View, {\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, showToolBar && toolBarPosition === Constants.DEFAULT_TOOL_BAR_POSITION.TOP && _toolBar, showWeeks && !horizontal && React.createElement(WeekBar, {\n        weeks: _weeks,\n        style: weeksStyle,\n        textStyle: weeksTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 46\n        }\n      }), React.createElement(FlatList, _extends({\n        style: scrollContentStyle,\n        automaticallyAdjustContentInsets: false,\n        ref: function ref(_ref2) {\n          return _this2.flatList = _ref2;\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.year + \"-\" + item.month;\n        },\n        data: this.state.dataSource,\n        extraData: this.state,\n        horizontal: horizontal,\n        showsHorizontalScrollIndicator: showsHorizontalScrollIndicator,\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator,\n        scrollEnabled: scrollEnabled,\n        pagingEnabled: pagingEnabled,\n        initialNumToRender: 5\n      }, this.props, {\n        renderItem: this._renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      })), showToolBar && toolBarPosition === Constants.DEFAULT_TOOL_BAR_POSITION.BOTTOM && _toolBar);\n    }\n  }]);\n\n  return CalendarList;\n}(Component);\n\nCalendarList.propTypes = {\n  horizontal: PropTypes.bool,\n  showsHorizontalScrollIndicator: PropTypes.bool,\n  showsVerticalScrollIndicator: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  containerStyle: PropTypes.object,\n  scrollContentStyle: PropTypes.object,\n  showToolBar: PropTypes.bool,\n  toolBarPosition: PropTypes.string,\n  toolBarStyle: PropTypes.object,\n  toolBarCancelStyle: PropTypes.object,\n  toolBarConfirmStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  titleText: PropTypes.string,\n  cancelText: PropTypes.string,\n  confirmText: PropTypes.string,\n  cancel: PropTypes.func,\n  confirm: PropTypes.func,\n  cancelDisabled: PropTypes.bool,\n  confirmDisabled: PropTypes.bool,\n  onPressDate: PropTypes.func,\n  minDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  maxDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  showWeeks: PropTypes.bool,\n  weeks: PropTypes.array,\n  weeksChineseType: PropTypes.bool,\n  firstDayOnWeeks: PropTypes.number,\n  weeksStyle: PropTypes.object,\n  weeksTextStyle: PropTypes.object,\n  headerTitleType: PropTypes.number,\n  listItemStyle: PropTypes.object,\n  selectedDateMarkType: PropTypes.string,\n  selectedDateMarkColor: PropTypes.string,\n  selectedDateMarkRangeColor: PropTypes.string,\n  beyondDatesDisabled: PropTypes.bool,\n  beyondDatesDisabledTextColor: PropTypes.string,\n  leftArrowClick: PropTypes.func,\n  rightArrowClick: PropTypes.func,\n  hideArrow: PropTypes.bool,\n  arrowColor: PropTypes.string,\n  arrowSize: PropTypes.number,\n  arrowAlign: PropTypes.string\n};\nCalendarList.defaultProps = {\n  horizontal: false,\n  scrollEnabled: true,\n  pagingEnabled: false,\n  showToolBar: true,\n  toolBarPosition: Constants.DEFAULT_TOOL_BAR_POSITION.TOP,\n  cancelText: Constants.DEFAULT_CANCEL_TEXT,\n  confirmText: Constants.DEFAULT_CONFIRM_TEXT,\n  cancel: function cancel() {},\n  confirm: function confirm() {},\n  cancelDisabled: false,\n  confirmDisabled: false,\n  minDate: Constants.DEFAULT_MIN_DATE,\n  maxDate: Constants.DEFAULT_MAX_DATE,\n  showWeeks: true,\n  weeks: Constants.DEFAULT_WEEK_EN,\n  weeksChineseType: false,\n  firstDayOnWeeks: 0,\n  headerTitleType: 0,\n  listItemStyle: {},\n  selectedDateMarkType: Constants.DEFAULT_DATE_MARK_TYPE.ELLIPSE,\n  selectedDateMarkColor: 'magenta',\n  selectedDateMarkRangeColor: 'skyblue',\n  beyondDatesDisabled: true,\n  beyondDatesDisabledTextColor: '#b9b9b9'\n};\nexport default CalendarList;","map":{"version":3,"sources":["E:/app/rn-starter/node_modules/react-native-common-date-picker/src/calendar/CalendarList.js"],"names":["React","Component","PropTypes","Constants","WeekBar","ToolBar","ListItem","CalendarList","state","dataSource","startDate","endDate","_selectDate","date","index","setState","isBigger","greaterThan","onPressDate","props","toStandardStringWith","_renderItem","item","minDate","maxDate","headerTitleType","listItemStyle","selectedDateMarkColor","selectedDateMarkRangeColor","beyondDatesDisabled","beyondDatesDisabledTextColor","horizontal","rightArrowClick","leftArrowClick","hideArrow","arrowAlign","arrowColor","arrowSize","validateDate","inverted","length","flatList","scrollToIndex","params","scrollToItem","scrollToOffset","scrollToEnd","firstDayOnWeeks","getCalendarDates","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","scrollEnabled","pagingEnabled","containerStyle","scrollContentStyle","showToolBar","toolBarPosition","toolBarStyle","toolBarCancelStyle","toolBarConfirmStyle","titleStyle","titleText","cancelText","confirmText","cancel","confirm","cancelDisabled","confirmDisabled","showWeeks","weeks","weeksChineseType","weeksStyle","weeksTextStyle","_wks","DEFAULT_WEEK_EN","DEFAULT_WEEK_ZH","_weeks","getWeekDays","_toolBar","dates","DEFAULT_TOOL_BAR_POSITION","TOP","ref","year","month","BOTTOM","propTypes","bool","object","string","func","oneOfType","instanceOf","Date","array","number","selectedDateMarkType","defaultProps","DEFAULT_CANCEL_TEXT","DEFAULT_CONFIRM_TEXT","DEFAULT_MIN_DATE","DEFAULT_MAX_DATE","DEFAULT_DATE_MARK_TYPE","ELLIPSE"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {FlatList, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport * as Constants from \"../contants\";\nimport WeekBar from \"./components/WeekBar\";\nimport ToolBar from \"../components/ToolBar\";\nimport ListItem from \"./components/ListItem\";\n\nclass CalendarList extends Component {\n\n    state = {\n        dataSource: [],\n        startDate: '',\n        endDate: '',\n    };\n\n    componentDidMount() {\n        const {minDate, maxDate, firstDayOnWeeks} = this.props;\n        this.setState({\n            dataSource: Constants.getCalendarDates(Constants.validateDate(minDate), Constants.validateDate(maxDate), firstDayOnWeeks),\n        });\n    }\n\n    /**\n     * Select date call back with date parameter.\n     * @param date A date string representing the date selected such as '2020-5-11'.\n     */\n    _selectDate = (date, index) => {\n        const {startDate, endDate} = this.state;\n        if (startDate && endDate) {\n            this.setState({\n                startDate: date,\n                endDate: '',\n            });\n            return;\n        }\n        if (startDate) {\n            const isBigger = Constants.greaterThan(startDate, date);\n            this.setState({\n                startDate: isBigger ? date : startDate,\n                endDate: isBigger ? startDate : date,\n            });\n        } else {\n            this.setState({startDate: date});\n        }\n        const {onPressDate} = this.props;\n        onPressDate && typeof onPressDate === 'function' && onPressDate(Constants.toStandardStringWith(date), index);\n    };\n\n    _renderItem = ({item, index}) => {\n        const {\n            minDate,\n            maxDate,\n            headerTitleType,\n            listItemStyle,\n            selectedDateMarkColor,\n            selectedDateMarkRangeColor,\n            beyondDatesDisabled,\n            beyondDatesDisabledTextColor,\n            horizontal,\n            rightArrowClick,\n            leftArrowClick,\n            hideArrow,\n            arrowAlign,\n            arrowColor,\n            arrowSize,\n        } = this.props;\n        return <ListItem\n            {...this.props}\n            item={item}\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n            minDate={Constants.validateDate(minDate)}\n            maxDate={Constants.validateDate(maxDate)}\n            selectDate={this._selectDate}\n            headerTitleType={headerTitleType}\n            listItemStyle={listItemStyle}\n            selectedDateMarkColor={selectedDateMarkColor}\n            selectedDateMarkRangeColor={selectedDateMarkRangeColor}\n            beyondDatesDisabled={beyondDatesDisabled}\n            beyondDatesDisabledTextColor={beyondDatesDisabledTextColor}\n            horizontal={horizontal}\n            leftArrowClick={() => {\n                if (leftArrowClick && typeof leftArrowClick === 'function') {\n                    leftArrowClick(index);\n                    return;\n                }\n                if (this.props.inverted) {\n                    if (index !== this.state.dataSource.length - 1) {\n                        this.flatList.scrollToIndex({index: index + 1});\n                    }\n                } else {\n                    if (index !== 0) {\n                        this.flatList.scrollToIndex({index: index - 1});\n                    }\n                }\n            }}\n            rightArrowClick={() => {\n                if (rightArrowClick && typeof rightArrowClick === 'function') {\n                    rightArrowClick(index);\n                    return;\n                }\n                if (this.props.inverted) {\n                    if (index !== 0) {\n                        this.flatList.scrollToIndex({index: index - 1});\n                    }\n                } else {\n                    if (index !== this.state.dataSource.length - 1) {\n                        this.flatList.scrollToIndex({index: index + 1});\n                    }\n                }\n            }}\n            hideArrow={hideArrow}\n            arrowColor={arrowColor}\n            arrowSize={arrowSize}\n            arrowAlign={arrowAlign}\n        />;\n    };\n\n    /**\n     * See FlatList docs. If you'd like to do something outside. e.g: you maybe want to scroll to the end. Then you can\n     * use \"<CalendarList ref={ref => this.calendarList = ref}; this.calendarList.scrollToEnd()\" to make it work for you.\n     */\n    scrollToIndex = params => this.flatList.scrollToIndex(params);\n    scrollToItem = params => this.flatList.scrollToItem(params);\n    scrollToOffset = params => this.flatList.scrollToOffset(params);\n    scrollToEnd = params => this.flatList.scrollToEnd(params);\n\n    render() {\n\n        const {\n\n            horizontal,\n            showsHorizontalScrollIndicator,\n            showsVerticalScrollIndicator,\n            scrollEnabled,\n            pagingEnabled,\n\n            containerStyle,\n            scrollContentStyle,\n\n            showToolBar,\n            toolBarPosition,\n            toolBarStyle,\n            toolBarCancelStyle,\n            toolBarConfirmStyle,\n            titleStyle,\n            titleText,\n            cancelText,\n            confirmText,\n            cancel,\n            confirm,\n            cancelDisabled,\n            confirmDisabled,\n\n            showWeeks,\n            weeks,\n            weeksChineseType,\n            firstDayOnWeeks,\n            weeksStyle,\n            weeksTextStyle,\n\n        } = this.props;\n\n        const _wks = weeksChineseType && weeks === Constants.DEFAULT_WEEK_EN ? Constants.DEFAULT_WEEK_ZH : weeks;\n        const _weeks = Constants.getWeekDays(_wks, firstDayOnWeeks);\n\n        const _toolBar = (<ToolBar\n            style={toolBarStyle}\n            cancelStyle={toolBarCancelStyle}\n            confirmStyle={toolBarConfirmStyle}\n            titleStyle={titleStyle}\n            titleText={titleText}\n            cancelText={cancelText}\n            cancel={() => cancel && typeof cancel === 'function' && cancel()}\n            confirm={() => {\n                const {startDate, endDate} = this.state;\n                const dates = [Constants.toStandardStringWith(startDate), Constants.toStandardStringWith(endDate)];\n                confirm && typeof confirm === 'function' && confirm(dates);\n            }}\n            confirmText={confirmText}\n            cancelDisabled={cancelDisabled}\n            confirmDisabled={confirmDisabled}\n        />);\n\n        return (\n            <View style={containerStyle}>\n                {showToolBar && toolBarPosition === Constants.DEFAULT_TOOL_BAR_POSITION.TOP && _toolBar}\n                {showWeeks && !horizontal && <WeekBar\n                    weeks={_weeks}\n                    style={weeksStyle}\n                    textStyle={weeksTextStyle}\n                />}\n                <FlatList\n                    style={scrollContentStyle}\n                    automaticallyAdjustContentInsets={false}\n                    ref={ref => this.flatList = ref}\n                    keyExtractor={item => `${item.year}-${item.month}`}\n                    data={this.state.dataSource}\n                    extraData={this.state}\n                    horizontal={horizontal}\n                    showsHorizontalScrollIndicator={showsHorizontalScrollIndicator}\n                    showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n                    scrollEnabled={scrollEnabled}\n                    pagingEnabled={pagingEnabled}\n                    initialNumToRender={5}\n                    {...this.props}\n                    renderItem={this._renderItem}\n                />\n                {showToolBar && toolBarPosition === Constants.DEFAULT_TOOL_BAR_POSITION.BOTTOM && _toolBar}\n            </View>\n        );\n    }\n}\n\nCalendarList.propTypes = {\n\n    /**\n     * Seen as FlatList component.\n     */\n    horizontal: PropTypes.bool,\n\n    /**\n     * Seen as FlatList component.\n     */\n    showsHorizontalScrollIndicator: PropTypes.bool,\n\n    /**\n     * Seen as FlatList component.\n     */\n    showsVerticalScrollIndicator: PropTypes.bool,\n\n    /**\n     * Seen as FlatList component. Default is true.\n     */\n    scrollEnabled: PropTypes.bool,\n\n    /**\n     * Seen as FlatList component. Default is false.\n     */\n    pagingEnabled: PropTypes.bool,\n\n    /**\n     * Styles for container, you can set it as any view prop styles such as {backgroundColor: 'red'}\n     */\n    containerStyle: PropTypes.object,\n\n    /**\n     * Styles for scroll list - FlatList, you can set it as any view prop styles such as {backgroundColor: 'red'}\n     */\n    scrollContentStyle: PropTypes.object,\n\n    /**\n     * Whether to show tool bar, default is true. If false, hide tool bar on top.\n     */\n    showToolBar: PropTypes.bool,\n\n    /**\n     * The position of tool bar, default is 'top' that is at the top of screen. So far, just both 'top' and 'bottom'\n     * are supported.\n     */\n    toolBarPosition: PropTypes.string,\n\n    /**\n     * tool bar view styles, passed like {backgroundColor: 'red'} as you like.\n     */\n    toolBarStyle: PropTypes.object,\n\n    /**\n     * tool bar cancel button text styles, passed like {color: 'red', fontSize: 15} as you like.\n     * Note that you can control the active opacity of the button through {activeOpacity: 1}.\n     */\n    toolBarCancelStyle: PropTypes.object,\n\n    /**\n     * tool bar confirm button text styles, passed like {color: 'red', fontSize: 15} as you like.\n     * Note that you can control the active opacity of the button through {activeOpacity: 1}.\n     */\n    toolBarConfirmStyle: PropTypes.object,\n\n    /**\n     * tool bar title text style.\n     */\n    titleStyle: PropTypes.object,\n\n    /**\n     * tool bar title text, default is \"\".\n     */\n    titleText: PropTypes.string,\n\n    /**\n     * tool bar cancel button text, default is \"Cancel\".\n     */\n    cancelText: PropTypes.string,\n\n    /**\n     * tool bar confirm button text, default is \"Confirm\".\n     */\n    confirmText: PropTypes.string,\n\n    /**\n     * tool bar cancel button callback.\n     */\n    cancel: PropTypes.func,\n\n    /**\n     * tool bar confirm button callback with a date array like [\"2016-01-09\", \"2019-09-18\"]. \"2016-01-09\" is the\n     * start date(min date) you selected. \"2019-09-18\" is the end date(max date) you selected. If nothing is selected,\n     * the array's elements will be empty string like [\"\", \"\"].\n     */\n    confirm: PropTypes.func,\n\n    /**\n     * Whether to disable the cancel button. Default is false.\n     */\n    cancelDisabled: PropTypes.bool,\n\n    /**\n     * Whether to disable the confirm button. Default is false.\n     */\n    confirmDisabled: PropTypes.bool,\n\n    /**\n     * A callback with a date parameter(like \"2019-08-09\") and row index when the user presses some date item.\n     */\n    onPressDate: PropTypes.func,\n\n    /**\n     * Min date to limit, default is \"2000-01-01\". Other supported formats: \"2000-1-1\", \"2000/01/01\", \"2000/1/1\".\n     * Note: Date type is also supported.\n     */\n    minDate: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * Max date to limit, default is today calculated by new Date(). Other supported formats: \"2015-1-1\", \"2015/01/01\", \"2015/1/1\".\n     * Note: Date type is also supported.\n     */\n    maxDate: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * Whether to show weeks, default is true.\n     */\n    showWeeks: PropTypes.bool,\n\n    /**\n     * Week days to show, default is from Sunday to Saturday, namely ['Su','Mo','Tu','We','Th','Fr','Sa'].\n     * Note that if you want to custom \"weeks\", then you have to accomplish \"firstDayOnWeeks\" at the same time.\n     * For example, you passed \"['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\" to \"weeks\", you must pass 1 to\n     * \"firstDayOnWeeks\" equal to \"firstDayOnWeeks={1}\". What's more, 1 means Monday, 2 means Tuesday, ..., 0 Means Sunday.\n     */\n    weeks: PropTypes.array,\n\n    /**\n     * Weeks type. Default is false, namely ['Su','Mo','Tu','We','Th','Fr','Sa']. If you want to use chinese, such as\n     * ['日','一','二','三','四','五','六'], just setting \"weeksChineseType={true}\" is okay. But the precondition is that\n     * \"weeks\" above uses the default value. Or it will be invalid.\n     */\n    weeksChineseType: PropTypes.bool,\n\n    /**\n     * The first day for weeks. Default is 0 equal to Sunday. If you'd like to start with Saturday, \"firstDayOnWeeks={6}\"\n     * will work. The value ranges from 0 to 6.\n     */\n    firstDayOnWeeks: PropTypes.number,\n\n    /**\n     * For week days, set the container styles like {backgroundColor: 'red'}.\n     */\n    weeksStyle: PropTypes.object,\n\n    /**\n     * For week days, set the week day text styles like {color: 'blue', fontSize: 14}.\n     */\n    weeksTextStyle: PropTypes.object,\n\n    /**\n     * Display form of the header title. Default is 0. Take \"2020-04\" date as an example:\n     * 0:  \"2020-04\"\n     * 1:  \"2020年4月\"\n     * 2:  \"Apr 2020\"\n     * 3:  \"April 2020\"\n     * 4:  \"2020/04\"\n     * 5:  \"04/2020\"\n     */\n    headerTitleType: PropTypes.number,\n\n    /**\n     * Content styles containing header title and days content. This is a nesting object style. So if you want to set\n     * some specific style such as \"headerTitle\", you can set it to {headerTitle: {fontSize: 18, color: 'red'}}. Details\n     * are as follows:\n     {\n        container: {\n            flex: 1,\n        },\n        headerTitleContainer: {\n            height: 50,\n        },\n        headerTitle: {\n            fontSize: 17,\n        },\n        dayContent: {\n            backgroundColor: 'red',\n        },\n        day: {\n            color: '#3e3e3e',\n        },\n     };\n     */\n    listItemStyle: PropTypes.object,\n\n    /**\n     * Selected date mark type. Default is 'ellipse', other choices: 'semiellipse'、'rectangle'、'circle'、 'square'、'dot'.\n     */\n    selectedDateMarkType: PropTypes.string,\n\n    /**\n     * Selected date mark background color for start date and end date. Default is 'magenta'.\n     */\n    selectedDateMarkColor: PropTypes.string,\n\n    /**\n     * Selected date mark background color between start date and end date. Default is 'skyblue'.\n     */\n    selectedDateMarkRangeColor: PropTypes.string,\n\n    /**\n     * When the date is out of minDate or maxDate, whether to disable the button. Default is true.\n     */\n    beyondDatesDisabled: PropTypes.bool,\n\n    /**\n     * When the date is out of minDate or maxDate, the button text color. Default is '#b9b9b9'.\n     */\n    beyondDatesDisabledTextColor: PropTypes.string,\n\n    /**\n     * Left arrow click callback with current date index parameter. Only when \"horizontal={true}\".\n     */\n    leftArrowClick: PropTypes.func,\n\n    /**\n     * Right arrow click callback with current date index parameter. Only when \"horizontal={true}\".\n     */\n    rightArrowClick: PropTypes.func,\n\n    /**\n     * Whether to hide arrow. Default is false. Only when \"horizontal={true}\".\n     */\n    hideArrow: PropTypes.bool,\n\n    /**\n     * Arrow color. Default is 'gray'. Only when \"horizontal={true}\".\n     */\n    arrowColor: PropTypes.string,\n\n    /**\n     * Arrow size. Default is 8. Only when \"horizontal={true}\".\n     */\n    arrowSize: PropTypes.number,\n\n    /**\n     * Arrow align. Default is 'left'. One of ['left', 'center', 'right']. Only when \"horizontal={true}\".\n     */\n    arrowAlign: PropTypes.string,\n};\n\nCalendarList.defaultProps = {\n    horizontal: false,\n    scrollEnabled: true,\n    pagingEnabled: false,\n    showToolBar: true,\n    toolBarPosition: Constants.DEFAULT_TOOL_BAR_POSITION.TOP,\n    cancelText: Constants.DEFAULT_CANCEL_TEXT,\n    confirmText: Constants.DEFAULT_CONFIRM_TEXT,\n    cancel: () => {\n    },\n    confirm: () => {\n    },\n    cancelDisabled: false,\n    confirmDisabled: false,\n    minDate: Constants.DEFAULT_MIN_DATE,\n    maxDate: Constants.DEFAULT_MAX_DATE,\n    showWeeks: true,\n    weeks: Constants.DEFAULT_WEEK_EN,\n    weeksChineseType: false,\n    firstDayOnWeeks: 0,\n    headerTitleType: 0,\n    listItemStyle: {},\n    selectedDateMarkType: Constants.DEFAULT_DATE_MARK_TYPE.ELLIPSE,\n    selectedDateMarkColor: 'magenta',\n    selectedDateMarkRangeColor: 'skyblue',\n    beyondDatesDisabled: true,\n    beyondDatesDisabledTextColor: '#b9b9b9',\n};\n\nexport default CalendarList;\n"]},"metadata":{},"sourceType":"module"}